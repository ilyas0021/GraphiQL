enum TypeCompte {
    COURANT
    EPARGNE
}

enum TypeTransaction {
    DEPOT
    RETRAIT
}




type Query {
    allComptes : [Compte]
    CompteById(id : ID) : Compte
    totalSolde: SoldeStats
    compteByType(type : TypeCompte): [Compte]
    deleteCompteById(id : ID): Compte
    compteTransactions(id: ID): [Transaction]
    transactionStats: TransactionState
}

type TransactionState {
    count: Int
    sumDepots: Float
    sumRetraits: Float
}

type Transaction {
    id: ID
    montant: Float
    date: String
    type: TypeTransaction
    compte: Compte
}

type Compte{
    id: ID
    solde: Float
    dateCreation : String
    type: TypeCompte
}

type Mutation {
    saveCompte(compte:CompteRequest):Compte
    addTransaction(transactionRequest: TransactionRequest): Transaction
}

input  TransactionRequest {
    compteId: ID
    montant: Float
    date: String
    type: TypeTransaction

}

input CompteRequest {
    solde: Float
    dateCreation: String
    type: TypeCompte
}

type SoldeStats{
    count:  Int
    sum: Float
    average: Float
}